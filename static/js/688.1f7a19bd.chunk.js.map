{"version":3,"file":"static/js/688.1f7a19bd.chunk.js","mappings":"2MAOMA,EAAUC,EAAAA,GAAAA,KAAH,kKAUPC,EAAQ,gEAA4DC,mCAA5D,mBAEd,SAASC,IACP,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,EAAYF,EAAOG,KAAI,SAACC,EAAOC,GAAO,IAAD,gBACzC,OACE,UAAC,aAAD,CAEEC,IAAG,8DACDT,mCADC,iHAE4FG,EAC7FK,UAHC,iBAE4F,EAE5FE,UAJA,aAE4F,EAExFC,WAJJ,kDAKHC,IAAG,UAAET,EAAOK,UAAT,aAAE,EAAWE,GAAGC,WACnBE,YAAY,EACZC,iBAAkBN,EAAI,IAAM,IAAK,EATnC,WAWE,iCAAIL,EAAOK,UAAX,aAAI,EAAWO,QACf,UAAC,KAAD,CACEC,GAAI,CACFC,SAAS,eAAD,iBAAiBd,EAAOK,UAAxB,aAAiB,EAAWO,KAAKG,cAAjC,WACRC,MAAO,CACLT,GAAG,GAAD,iBAAKP,EAAOK,UAAZ,aAAK,EAAWE,IAClBU,UAAU,GAAD,iBAAKjB,EAAOK,UAAZ,aAAK,EAAWO,KAAKG,eAC9BG,SAAS,eAAD,iBAAiBlB,EAAOK,UAAxB,aAAiB,EAAWO,KAAKG,iBAN/C,UAUG,IAVH,iBAXKI,EAAAA,EAAAA,MA0BV,IAmBD,OAjBAC,EAAAA,EAAAA,YAAU,WACRC,MAAMzB,GACH0B,MAAK,SAACC,GACL,GAAKA,EAAIC,GAGP,OAAOD,EAAIE,OAFX,MAAM,IAAIC,MAAMH,EAAII,OAIvB,IACAL,MAAK,SAACM,GACL3B,EAAU2B,EAAK5B,OAAO6B,MAAM,EAAG,GAChC,IACAC,OAAM,SAACC,GACNC,QAAQC,MAAMF,EACf,GACJ,GAAE,KAEI,SAACrC,EAAD,UAAUQ,GAClB,CACD,WAAegC,EAAAA,EAAAA,MAAKpC,E","sources":["components/Main.js"],"sourcesContent":["import React, { useEffect, useState, memo } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { SearchPage as Genre } from \"../composition/SearchPage\"\r\n\r\nimport { Link } from \"react-router-dom\"\r\nimport { nanoid } from \"nanoid\"\r\n\r\nconst MainDiv = styled.main`\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 95%;\r\n  margin-inline: auto;\r\n  gap: 3em;\r\n  padding: 5em 0;\r\n`\r\n\r\nconst genreUrl = `https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`\r\n\r\nfunction Main() {\r\n  const [genres, setGenres] = useState([])\r\n  const genreHtml = genres.map((genre, i) => {\r\n    return (\r\n      <Genre\r\n        key={nanoid()}\r\n        url={`https://api.themoviedb.org/3/discover/movie?api_key=${\r\n          process.env.REACT_APP_API_KEY\r\n        }&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&with_genres=${genres[\r\n          i\r\n        ]?.id?.toString()}&with_watch_monetization_types=flatrate&page=1`}\r\n        dep={genres[i]?.id.toString()}\r\n        redirected={false}\r\n        horizontalScroll={i % 3 === 0 && true}\r\n      >\r\n        <p>{genres[i]?.name}</p>\r\n        <Link\r\n          to={{\r\n            pathname: `/categories/${genres[i]?.name.toLowerCase()}/page=1`,\r\n            state: {\r\n              id: `${genres[i]?.id}`,\r\n              genreName: `${genres[i]?.name.toLowerCase()}`,\r\n              linkName: `/categories/${genres[i]?.name.toLowerCase()}`,\r\n            },\r\n          }}\r\n        >\r\n          {\" \"}\r\n          see more\r\n        </Link>\r\n      </Genre>\r\n    )\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetch(genreUrl)\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(res.status)\r\n        } else {\r\n          return res.json()\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setGenres(data.genres.slice(0, 5))\r\n      })\r\n      .catch((err) => {\r\n        console.error(err)\r\n      })\r\n  }, [])\r\n\r\n  return <MainDiv>{genreHtml}</MainDiv>\r\n}\r\nexport default memo(Main)\r\n"],"names":["MainDiv","styled","genreUrl","process","Main","useState","genres","setGenres","genreHtml","map","genre","i","url","id","toString","dep","redirected","horizontalScroll","name","to","pathname","toLowerCase","state","genreName","linkName","nanoid","useEffect","fetch","then","res","ok","json","Error","status","data","slice","catch","err","console","error","memo"],"sourceRoot":""}